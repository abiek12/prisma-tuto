// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  User
  Admin
}

model User {
  id             String          @id @default(uuid())
  email          String          @unique
  userName       String?
  role           Role            @default(User)
  writtenPosts   Post[]          @relation("WrittenPosts")
  favoritedPosts Post[]          @relation("FavoritedPosts")
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  userPreference UserPreference?

  @@index([email])
}

model UserPreference {
  id              String     @id @default(uuid())
  emailUpdate     Boolean    @default(false)
  likedCategories Category[]
  userId          String     @unique
  user            User?      @relation(fields: [userId], references: [id])
}

model Post {
  id            String     @id @default(uuid())
  title         String
  content       String?
  published     Boolean    @default(false)
  rating        Float?
  authorId      String?
  author        User?      @relation("WrittenPosts", fields: [authorId], references: [id])
  favoritedById String?
  favioritedBy  User?      @relation("FavoritedPosts", fields: [favoritedById], references: [id])
  categories    Category[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@index([title])
}

model Category {
  id         String           @id @default(uuid())
  name       String           @unique
  posts      Post[]
  likedUsers UserPreference[]
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
}
